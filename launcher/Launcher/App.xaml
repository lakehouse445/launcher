<Application x:Class="Launcher.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!-- Fluent Design Color Palette -->
            <Color x:Key="ClassicCounterOrangeColor">#FF6A00</Color>
            <Color x:Key="ClassicCounterBlueColor">#0066CC</Color>
            <Color x:Key="FluentBackgroundColor">#F3F3F3</Color>
            <Color x:Key="FluentDarkBackgroundColor">#202020</Color>
            <Color x:Key="FluentCardColor">#FFFFFF</Color>
            <Color x:Key="FluentDarkCardColor">#2C2C2C</Color>
            <Color x:Key="FluentSurfaceColor">#FAFAFA</Color>
            <Color x:Key="FluentDarkSurfaceColor">#1C1C1C</Color>
            <Color x:Key="FluentBorderColor">#E5E5E5</Color>
            <Color x:Key="FluentDarkBorderColor">#3C3C3C</Color>
            
            <!-- Fluent Brushes -->
            <SolidColorBrush x:Key="ClassicCounterOrange" Color="{StaticResource ClassicCounterOrangeColor}"/>
            <SolidColorBrush x:Key="ClassicCounterBlue" Color="{StaticResource ClassicCounterBlueColor}"/>
            <SolidColorBrush x:Key="FluentBackground" Color="{StaticResource FluentDarkBackgroundColor}"/>
            <SolidColorBrush x:Key="FluentCard" Color="{StaticResource FluentDarkCardColor}"/>
            <SolidColorBrush x:Key="FluentSurface" Color="{StaticResource FluentDarkSurfaceColor}"/>
            <SolidColorBrush x:Key="FluentBorder" Color="{StaticResource FluentDarkBorderColor}"/>
            <SolidColorBrush x:Key="FluentText" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="FluentTextSecondary" Color="#CCCCCC"/>
            <SolidColorBrush x:Key="FluentTextTertiary" Color="#999999"/>
            
            <!-- Fluent Accent Gradients -->
            <LinearGradientBrush x:Key="FluentAccentGradient" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="{StaticResource ClassicCounterOrangeColor}" Offset="0"/>
                <GradientStop Color="#FF8533" Offset="1"/>
            </LinearGradientBrush>
            
            <LinearGradientBrush x:Key="FluentBlueGradient" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="{StaticResource ClassicCounterBlueColor}" Offset="0"/>
                <GradientStop Color="#0080FF" Offset="1"/>
            </LinearGradientBrush>
            
            <!-- Fluent Card Style -->
            <Style x:Key="FluentCardStyle" TargetType="Border">
                <Setter Property="Background" Value="{StaticResource FluentCard}"/>
                <Setter Property="CornerRadius" Value="8"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource FluentBorder}"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" BlurRadius="20" ShadowDepth="4" Opacity="0.1"/>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect Color="Black" BlurRadius="25" ShadowDepth="6" Opacity="0.15"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- Fluent Button Style -->
            <Style x:Key="FluentButton" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource FluentAccentGradient}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Padding" Value="24,12"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="FontFamily" Value="Segoe UI Variable"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="ButtonBorder"
                                    Background="{TemplateBinding Background}" 
                                    CornerRadius="6"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                                TextBlock.FontWeight="{TemplateBinding FontWeight}"/>
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="8" ShadowDepth="2" Opacity="0.2"/>
                                </Border.Effect>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect Color="Black" BlurRadius="12" ShadowDepth="3" Opacity="0.3"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                <GradientStop Color="#FF7F1A" Offset="0"/>
                                                <GradientStop Color="#FF9F4A" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                <GradientStop Color="#E55A00" Offset="0"/>
                                                <GradientStop Color="#FF6A1A" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="#404040"/>
                                    <Setter Property="Foreground" Value="#808080"/>
                                    <Setter TargetName="ButtonBorder" Property="Effect" Value="{x:Null}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Secondary Button Style -->
            <Style x:Key="FluentSecondaryButton" TargetType="Button" BasedOn="{StaticResource FluentButton}">
                <Setter Property="Background" Value="{StaticResource FluentBlueGradient}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Color="#1A7FFF" Offset="0"/>
                                    <GradientStop Color="#4DA6FF" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- Fluent Progress Bar -->
            <Style x:Key="FluentProgressBar" TargetType="ProgressBar">
                <Setter Property="Height" Value="4"/>
                <Setter Property="Background" Value="{StaticResource FluentBorder}"/>
                <Setter Property="Foreground" Value="{StaticResource FluentAccentGradient}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ProgressBar">
                            <Border Background="{TemplateBinding Background}" CornerRadius="2">
                                <Grid>
                                    <Border Name="PART_Track" CornerRadius="2"/>
                                    <Border Name="PART_Indicator" 
                                            Background="{TemplateBinding Foreground}" 
                                            HorizontalAlignment="Left" 
                                            CornerRadius="2"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Fluent TextBox Style -->
            <Style x:Key="FluentTextBox" TargetType="TextBox">
                <Setter Property="Background" Value="{StaticResource FluentSurface}"/>
                <Setter Property="Foreground" Value="{StaticResource FluentText}"/>
                <Setter Property="BorderBrush" Value="{StaticResource FluentBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="FontFamily" Value="Segoe UI Variable"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="6">
                                <ScrollViewer x:Name="PART_ContentHost" 
                                            Margin="{TemplateBinding Padding}"
                                            VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ClassicCounterOrange}"/>
                                    <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource FluentTextSecondary}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Fluent CheckBox Style -->
            <Style x:Key="FluentCheckBox" TargetType="CheckBox">
                <Setter Property="Foreground" Value="{StaticResource FluentText}"/>
                <Setter Property="FontFamily" Value="Segoe UI Variable"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Padding" Value="8,0,0,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <StackPanel Orientation="Horizontal">
                                <Border x:Name="CheckBoxBorder"
                                        Width="18" Height="18"
                                        Background="{StaticResource FluentSurface}"
                                        BorderBrush="{StaticResource FluentBorder}"
                                        BorderThickness="2"
                                        CornerRadius="4">
                                    <Path x:Name="CheckMark"
                                          Data="M 2 6 L 6 10 L 14 2"
                                          Stroke="{StaticResource ClassicCounterOrange}"
                                          StrokeThickness="2"
                                          Visibility="Collapsed"/>
                                </Border>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                VerticalAlignment="Center"/>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="CheckBoxBorder" Property="Background" Value="{StaticResource FluentCard}"/>
                                    <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{StaticResource ClassicCounterOrange}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{StaticResource ClassicCounterOrange}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
